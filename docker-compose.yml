version: '3'

services:
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: REDSQUIRREL
      MINIO_ROOT_PASSWORD: YELLOWMONKEY
    volumes:
      - ./data/minio:/data
    command: server /data -console-address ":9002"
  db:
    image: postgis/postgis:12-2.5-alpine
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: SPAWNPLOW
      POSTGRES_PASSWORD: YELLOWSPATULA
      POSTGRES_DB: bdms
    healthcheck:
      test: "pg_isready -U SPAWNPLOW -d bdms -h db"
      interval: 3s
      timeout: 1s
      retries: 20
      start_period: 25s
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 3001:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
      PGADMIN_DEFAULT_PASSWORD: PEEVEDWATER
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - ./config/pgadmin4-servers.json:/pgadmin4/servers.json
    entrypoint:
      - /bin/sh
      - -c
      - |
        /bin/echo '*:*:bdms:SPAWNPLOW:YELLOWSPATULA' > /tmp/.pgpass
        chmod 0600 /tmp/.pgpass
        /entrypoint.sh
    depends_on:
      db:
        condition: service_healthy
  client:
    build:
      context: ./src/client
      target: development
      args:
        - VERSION=0.0.99
        - REVISION=dev
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/src/client/node_modules
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
    environment:
      REACT_APP_PROXY_HOST_API_v1: http://api-legacy:8888/
      REACT_APP_PROXY_HOST_API_v2: http://api:5000/
      WATCHPACK_POLLING: 'true'
  api-legacy:
    build:
      context: ./src/api-legacy
      args:
        - VERSION=0.0.99
        - REVISION=dev
    restart: unless-stopped
    ports:
      - 8888:8888
    volumes:
      - ./src/api-legacy:/usr/src/app/bms
    depends_on:
      db:
        condition: service_healthy
    environment:
      S3_ENDPOINT: minio:9000
      S3_BUCKET_NAME: swissforages
      S3_ACCESS_KEY: REDSQUIRREL
      S3_SECRET_KEY: YELLOWMONKEY
      S3_SECURE: 0
      DB_USERNAME: SPAWNPLOW
      DB_PASSWORD: YELLOWSPATULA
      DB_DATABASE: bdms
      DB_HOST: db
      DB_PORT: 5432
      SMTP_SENDER: WRONGAUTO@example.com
      SMTP_SERVER: mailhog.geow.cloud
      SMTP_RECIPIENTS: ORANGEPHOTO@example.com
      APP_BASE_DOMAIN: CHEFCHASER.example.com
  api:
    build:
      context: ./src/api
      target: development
    restart: unless-stopped
    ports:
      - 5000:5000
    volumes:
      - ./src/api:/src
      - /src/bin
      - /src/obj
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_URLS: http://+:5000
      DOTNET_USE_POLLING_FILE_WATCHER: 1
      CONNECTIONSTRINGS__BdmsContext: Host=db;Username=SPAWNPLOW;Password=YELLOWSPATULA;Database=bdms;CommandTimeout=100
